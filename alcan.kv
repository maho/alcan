#:import defs defs
#:import Vec2d cymunk.Vec2d
#:import Vector kivy.vector.Vector
#:import pi math.pi
#:import partial functools.partial

<AlcanSM>
    id: sm
    gameuberlayout: gameuberlayout
    Screen:
        name: 'intro'
        BoxLayout:
            orientation: 'vertical'
            padding: '30sp'

            IntroLabel:
                text:  defs.INTRO_TEXT
                size_hint: 1.0, 1.0
                text_size: self.size[0], None
                halign: 'center'
                font_size: 22
                
                on_press: sm.current = 'main'


            # Widget:
            #     size_hint: 1.0, 0.2

    Screen:
        #canvas.before:
        #    Color:
        #        rgba: 1, 1, 1, 0.8
        #    Rectangle:
        #        pos: self.pos
        #        size: self.size
        name: 'main'

        RelativeLayout:

            Image:
                source: 'img/front.png'
                id: img

            FloatLayout:
                # canvas.before:
                #     Color:
                #         rgba: 1, 0, 0, 0.5
                #     Rectangle:
                #         pos: self.pos
                #         size: self.size
                minsize: min(*self.parent.size)
                size: self.minsize, self.minsize
                pos: (self.parent.width - self.minsize)/2, (self.parent.height - self.minsize)/2
                size_hint: None, None

                FrontpageButton:
                    size_hint: 0.3, 0.35
                    pos_hint: {'center': (0.2, 0.75)}
                    on_press: root.play('easy')
                
                FrontpageButton:
                    size_hint: 0.3, 0.4
                    pos_hint: {'top': 0.85, 'right': 1.0}
                    on_press: root.play('medium')
                
                FrontpageButton:
                    size_hint: 0.4, 0.2
                    pos_hint: {'center': (0.45, 0.12)}
                    on_press: root.play('hard')

    Screen:
        name: 'game'
        BoxLayout:
            id: gameuberlayout
            orientation: 'vertical'
            
    
<AlcanGame>:
    name: 'game'
    canvas:
        Scale:
            xyz: (root.scale, root.scale, root.scale)
        Rectangle:
            pos: self.pos
            size: defs.map_size
            source: 'img/bg.png'

    wizard: wizard
    cannon: cannon
    scale: 1.0
    bfs: 'inf'
    stacklayout: stacklayout
    points: 0
    left_beam: left_beam

    BoxLayout:
        orientation: 'vertical'
        size: defs.map_size
       
        Widget:
            size_hint: None, None
            size: '20sp', '20sp'

        BoxLayout:

            orientation: 'horizontal'
            size_hint: 1.0, 1.0
            
            Label: 
                text: "Steps to invent dragon: %s"%root.bfs
                size: self.texture_size
                size_hint: None, None
                pos_hint: {'left': 0.0, 'top': 1.0}
            
            Widget:
                size_hint: None, None
                size: '50sp', '20sp'
            
            Label:
                text: "Points: %s"%root.points
                size: self.texture_size
                size_hint: None, None
                pos_hint: {'left': 0.0, 'top': 1.0}

            Widget:
                size_hint: 0.1, 0.1

            BoxLayout:
                orientation: 'horizontal'
                size_hint: 0.2, 0.3
                pos_hint: {'right': 0.0, 'top': 1.0}

                StackLayout:
                    pos_hint: {'right': 0.0, 'top': 1.0}
                    size_hint: 1.0, 1.0
                    id: stacklayout

                Button:
                    canvas:
                        Rectangle:
                            pos: self.pos
                            size: self.size
                            source: 'img/hint.png'
                    size_hint: None, None
                    size: 34, 41
                    pos_hint: {'right': 0.0, 'top': 1.0}
                    text: "?"
                    on_press: root.rotate_hint()
                    background_color: 0, 0, 0, 0.0


            
            Widget:
                size_hint: None, None
                size: '50sp', '20sp'

        Widget:
            size_hint: None, None
            size: '40sp', '40sp'


    Cannon:
        id: cannon
        pos: 400, 100
        mass: None
        moment_of_inertia: None 

    Wizard:
        id: wizard
        pos: 300, 100

    Platform:
            
        center: 1000,150
        size: 500, 45
        mass: 100
        imgsrc: 'img/rplatform.png'
        imgsize: 510, 51
        imgoffset: -5, -5

    Platform: 
        pos: 0,-100
        size: 500, 190
        mass: None
        moment_of_inertia: None
        imgsrc: 'img/lplatform.png'
        imgsize: 510, 172
        imgoffset: 0, 25

    Beam:
        id: left_beam
        mass: 'inf'
        moment_of_inertia: 'inf'
        center: 920 + defs.left_beam_fine_pos, 80

    Beam:
        mass: None
        moment_of_inertia: None
        center: 1250, 70

    Button:
        canvas:
            Rectangle:
                pos: self.pos
                size: self.size
                source: 'img/button-shoot.png'
        on_press: root.shoot()
        background_color: 0, 0, 0, 0.2
        pos: 0, 0
        size: 80, 80

    Button:
        canvas:
            Rectangle:
                pos: self.pos
                size: self.size
                source: 'img/button-drop.png'
        on_press: root.drop_carried_element()
        background_color: 0, 0, 0, 0.2
        pos: 100, 0
        size: 80, 80



<GameOver>:
    size: 800, 271
    angle: 0
    moment_of_inertia: 10**8
    mass: 1000

    canvas:
        PushMatrix
        Rotate:
            angle: root.angle
            origin: self.center
        Rectangle:
            pos: self.pos
            size: self.size[0], self.size[1]
            source: 'img/gameover.png'
        PopMatrix

    
    FloatLayout:
        pos: root.pos
        size: root.size
        
        Label: 
            pos: root.pos[0], root.pos[1] - 100
            size: root.size[0], 100
            size_hint: None, None
            text: "and wasted %s points"%app.game.points
            font_size: '30sp'

<Success>:
    size: 700, 400
    pos: 200, 200
    orientation: 'horizontal'

    Image:
        source: 'img/dragon-big.png'

    BoxLayout:
        orientation: 'vertical'
        
        Label:
            font_size: 110
            text: "Congrats!"

        Label:
            font_size: 60
            text: "You've got the Dragon!"

        Label: 
            font_size: '30sp'
            text: 'Got %s points!'%app.game.points


<Wizard>:
    size: 78, 98

    canvas:
        Rectangle:
            pos: self.pos
            size: self.size
            source: 'img/wizard.png'

<Element>:
    size: 40, 40
    imgsrc: None
    activated: False

    canvas:

        Color:
            rgba: (0.0, 0.9, 0.5, 1.0) if root.activated else (1.0, 1.0, 1.0, 1.0)

        Ellipse:
            pos: self.pos
            size: self.size

        Rectangle:
            pos: self.pos
            size: self.size
            source: root.imgsrc

<Platform>:
    size: 400, 50
    angle: 0
    moment_of_inertia:  10**6
    imgoffset: 0, 0
    imgsize: 0, 0
    imgsrc: None

        
    canvas:

        PushMatrix

        Rotate:
            angle: root.angle
            origin: self.center
            
        # Color: 
        #    rgba: (0., 1., 1., 0.8)
        Rectangle:
            pos: self.pos[0] + self.imgoffset[0], self.pos[1] + self.imgoffset[1]
            size: self.imgsize
            source: self.imgsrc

        PopMatrix

<Beam>:
    size: 50, 50
    friction: 44

    canvas:
        Color:
            rgba: (0., 1., 1.0, 0.8)
        Ellipse:
            pos: self.pos
            size: self.size

<Cannon>:
    size: 100, 100
    aim: 0

    offset: 0, -25

    canvas:
        PushMatrix
        Rotate
            angle: root.aim
            origin: Vec2d(self.center) + Vec2d(self.offset)

        Rectangle:
            pos: root.pos
            size: self.size
            source: "img/cannon.png"

        PopMatrix

<Explosion>:
    size: 100, 100
    frame: 1
    canvas:
        Rectangle:
            pos: root.pos
            size: self.size
            source: "img/explosion%02d.png"%root.frame


<PointsBaloon>:
    points: 0
    lab: lab
    size: self.lab.texture_size

    Label:
        id: lab
        halign: 'center'
        size: self.texture_size
        font_size: 80
        pos: root.pos
        text: "%+d" % root.points
        color: (1, 0, 0, 1) if root.points < 0 else (0, 0.8, 0.2, 1)

<Baloon>:
    canvas:
        Color:
            rgba: 0,0,0, 0.5
        Line:
            width: 3
            ellipse: [root.pos[0] - 20, root.pos[1] - 20, root.size[0] + 40, root.size[1] + 40]
        Line:
            points: [root.center[0], root.center[1] - 20] + root.anchor 
            width: 2

    anchor: (0, 0)
    text: "..."
    lab: lab
    size: self.lab.texture_size

    Label:
        id: lab
        halign: 'center'
        size: self.texture_size
        pos: root.pos
        text: root.text
        color: 0,0,0,1

<Hint>:

    orientation: 'vertical'
    a: '' 
    b: ''
    c: ''
    size: 380, 75
    size_hint: None,None
    
    Label: 
        text: "%s + %s = %s"%(root.a, root.b, root.c)
        size: 380, 25
        size_hint: None, None

    Widget:
        size: 380, 50
        size_hint: None, None

        canvas:
            Rectangle:
                pos: self.pos
                size: 50, 50
                source: "img/%s.png"%root.a

            Rectangle:
                pos: Vector(self.pos) + Vector(50, 10)
                size: 40, 40
                source: "img/plus.png"
            
            Rectangle:
                pos: Vector(self.pos) + Vector(90, 0)
                size: 50, 50
                source: "img/%s.png"%root.b

            Rectangle:
                pos: Vector(self.pos) + Vector(140, 10)
                size: 40, 40
                source: "img/equal.png"
            
            Rectangle:
                pos: Vector(self.pos) + Vector(180, 0)
                size: 50, 50
                source: "img/%s.png"%root.c
                    



<Label>:
    color: (0, 0, 0, 1)
    font_name: 'fonts/PfefferMediaeval.otf'
    font_size: 35

<FrontpageButton@Button>
    background_color: 0, 0, 0, 0.0
    color: (1, 1, 1, 0.9)

<IntroLabel@Button>:
    color: (1.0, 1.0, 0.5, 0.9)
    # background_color: 1, 1, 1, 1
    background_color: 0, 0, 0, 1.0

