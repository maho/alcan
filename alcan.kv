#:import defs defs
#:import Vec2d cymunk.Vec2d
#:import Vector kivy.vector.Vector
#:import pi math.pi

<AlcanSM>
    gameuberlayout: gameuberlayout
    Screen:
        name: 'main'
        BoxLayout:
            orientation: 'vertical'

            Button:
                text: 'easy'
                on_press: root.play('easy')

            Button:
                text: 'medium'
                on_press: root.play('medium')

            Button:
                text: 'hard'
                on_press: root.play('hard')

            # Button:
            #     text: 'report'
            #     on_press: root.report()
    Screen:
        name: 'game'
        BoxLayout:
            id: gameuberlayout
            orientation: 'vertical'
            
    
<AlcanGame>:
    name: 'game'
    canvas:
        Scale:
            xyz: (root.scale, root.scale, root.scale)
        Rectangle:
            pos: self.pos
            size: defs.map_size
            source: 'img/bg.jpg'

    wizard: wizard
    cannon: cannon
    scale: 1.0
    bfs: 'inf'
    stacklayout: stacklayout
    points: 0

    BoxLayout:
        orientation: 'vertical'
        size: defs.map_size
       
        Widget:
            size_hint: None, None
            size: '40sp', '40sp'
        BoxLayout:
            orientation: 'horizontal'

            Widget:
                size_hint: None, None
                size: '50sp', '10sp'

            Label: 
                text: "Steps to invent dragon: %s"%root.bfs
                size: self.texture_size
                size_hint: None, None
                pos_hint: {'left': 0.0, 'top': 1.0}
            
            Widget:
                size_hint: None, None
                size: '50sp', '10sp'
            
            Label:
                text: "Points: %s"%root.points
                size: self.texture_size
                size_hint: None, None
                pos_hint: {'left': 0.0, 'top': 1.0}

            Widget:
                size_hint: 1.0, 0.1

            StackLayout:
                pos_hint: {'right': 0.0, 'top': 1.0}
                size_hint: 0.5, 1.0
                id: stacklayout

        Widget:
            size_hint: 1.0, 1.0


    Cannon:
        id: cannon
        pos: 400, 100
        mass: None
        momentum: None 

    Wizard:
        id: wizard
        pos: 300, 100

    Platform:
        center: 1000,150
        size: 500, 45
        mass: 100

    Platform: 
        pos: 0,-100
        size: 500, 190
        mass: None
        momentum: None

    Beam:
        mass: None
        momentum: None
        center: 1020 + defs.left_beam_fine_pos, 70
    Beam:
        mass: None
        momentum: None
        center: 1250, 70




<GameOver>:
    size: 800, 271
    angle: 0
    momentum: 10**8
    mass: 1000

    canvas:
        PushMatrix
        Rotate:
            angle: root.angle
            origin: self.center
        Rectangle:
            pos: self.pos
            size: self.size[0], self.size[1]
            source: 'img/gameover.png'
        PopMatrix

    
    FloatLayout:
        pos: root.pos
        size: root.size
        
        Label: 
            pos: root.pos[0], root.pos[1] - 100
            size: root.size[0], 100
            size_hint: None, None
            text: "and wasted %s points"%app.game.points
            font_size: '30sp'

<Success>:
    size: 700, 400
    pos: 200, 200
    orientation: 'horizontal'

    Image:
        source: 'img/dragon-big.png'

    BoxLayout:
        orientation: 'vertical'
        
        Label:
            font_name: 'fonts/CabinSketch-Bold.otf'
            font_size: 110
            text: "Congrats!"

        Label:
            font_name: 'fonts/CabinSketch-Bold.otf'
            font_size: 60
            text: "You've got the Dragon!"

        Label: 
            font_size: '30sp'
            text: 'Got %s points!'%app.game.points


<Wizard>:
    size: 78, 98

    canvas:
        Rectangle:
            pos: self.pos
            size: self.size
            source: 'img/wizard.png'

<Element>:
    size: 40, 40
    imgsrc: None
    activated: False

    canvas:

        Color:
            rgba: (0.0, 0.9, 0.5, 1.0) if root.activated else (1.0, 1.0, 1.0, 1.0)

        Ellipse:
            pos: self.pos
            size: self.size

        Rectangle:
            pos: self.pos
            size: self.size
            source: root.imgsrc

<Platform>:
    size: 400, 50
    angle: 0
    momentum:  10**6
    
    canvas:

        PushMatrix

        Rotate:
            angle: root.angle
            origin: self.center
            
        Color: 
            rgba: (0., 1., 1., 0.8)
        Rectangle:
            pos: self.pos
            size: self.size

        PopMatrix

<Beam>:
    size: 50, 50
    friction: 44

    canvas:
        Color:
            rgba: (0., 1., 1.0, 0.8)
        Ellipse:
            pos: self.pos
            size: self.size

<Cannon>:
    size: 100, 100
    aim: 0

    offset: 0, -25

    canvas:
        PushMatrix
        Rotate
            angle: root.aim
            origin: Vec2d(self.center) + Vec2d(self.offset)

        Rectangle:
            pos: root.pos
            size: self.size
            source: "img/cannon.png"

        PopMatrix

<Explosion>:
    size: 100, 100
    frame: 1
    canvas:
        Rectangle:
            pos: root.pos
            size: self.size
            source: "img/explosion%02d.png"%root.frame


<Baloon>:
    canvas:
        Color:
            rgba: 0,0,0, 0.5
        Line:
            width: 3
            ellipse: [root.pos[0] - 20, root.pos[1] - 20, root.size[0] + 40, root.size[1] + 40]
        Line:
            points: [root.center[0], root.center[1] - 20] + root.anchor 
            width: 2

    anchor: (0, 0)
    text: "..."
    lab: lab
    size: self.lab.texture_size

    Label:
        id: lab
        halign: 'center'
        size: self.texture_size
        pos: root.pos
        text: root.text
        color: 0,0,0,1

<Hint>:
    orientation: 'vertical'
    a: '' 
    b: ''
    c: ''
    size: 280, 75
    size_hint: None,None
    
    Label: 
        text: "%s + %s = %s"%(root.a, root.b, root.c)
        size: 230, 25
        size_hint: None, None

    Widget:
        size: 230, 50
        size_hint: None, None

        canvas:
            Rectangle:
                pos: self.pos
                size: 50, 50
                source: "img/%s.png"%root.a

            Rectangle:
                pos: Vector(self.pos) + Vector(50, 10)
                size: 40, 40
                source: "img/plus.png"
            
            Rectangle:
                pos: Vector(self.pos) + Vector(90, 0)
                size: 50, 50
                source: "img/%s.png"%root.b

            Rectangle:
                pos: Vector(self.pos) + Vector(140, 10)
                size: 40, 40
                source: "img/equal.png"
            
            Rectangle:
                pos: Vector(self.pos) + Vector(180, 0)
                size: 50, 50
                source: "img/%s.png"%root.c
                    



<Label>:
    color: (0, 0, 0, 1)
    font_name: 'fonts/CabinSketch-Bold.otf'
    font_size: '20sp'

